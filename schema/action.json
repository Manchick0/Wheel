{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/Manchick0/Wheel/master/schema/action.json",
  "type": "object",
  "properties": {
    "type": {
      "type": "string",
      "enum": [
        "echo",
        "command",
        "open",
        "sound",
        "clipboard",
        "suggest",
        "link",
        "await",
        "random"
      ],
      "description": "The type of the action."
    }
  },
  "anyOf": [
    {
      "if": {
        "properties": {
          "type": {
            "const": "echo"
          }
        }
      },
      "then": {
        "properties": {
          "message": {
            "type": ["string", "object", "array"],
            "description": "A message to show in the chat."
          },
          "overlay": {
            "type": "boolean",
            "description": "Whether to show in the actionbar instead."
          }
        },
        "required": ["type", "message"]
      }
    },
    {
      "if": {
        "properties": {
          "type": {
            "const": "command"
          }
        }
      },
      "then": {
        "properties": {
          "command": {
            "type": "string",
            "description": "A command to perform"
          }
        },
        "required": ["type", "command"]
      }
    },
    {
      "if": {
        "properties": {
          "type": {
            "const": "open"
          }
        }
      },
      "then": {
        "properties": {
          "path": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_/]*",
            "description": "A sub-folder inside the \"widgets\" directory within a resource-pack."
          }
        },
        "required": ["type", "path"]
      }
    },
    {
      "if": {
        "properties": {
          "type": {
            "const": "sound"
          }
        }
      },
      "then": {
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the sound."
          },
          "volume": {
            "type": "number",
            "minimum": 0,
            "description": "The volume of the sound."
          },
          "pitch": {
            "type": "number",
            "minimum": 0,
            "maximum": 2,
            "description": "The pitch of the sound."
          },
          "stop": {
            "type": "boolean",
            "description": "Whether to stop the sound instead. Note: Stops all sounds if the \"id\" field isn't specified."
          }
        },
        "required": []
      }
    },
    {
      "if": {
        "properties": {
          "type": {
            "const": "clipboard"
          }
        }
      },
      "then": {
        "properties": {
          "clipboard": {
            "type": "string",
            "description": "The content to copy."
          }
        },
        "required": ["content"]
      }
    },
    {
      "if": {
        "properties": {
          "type": {
            "const": "suggest"
          }
        }
      },
      "then": {
        "properties": {
          "content": {
            "type": "string",
            "description": "The content to suggest in the chat."
          },
          "cursor": {
            "type": "string",
            "description": "The character to move the cursor to."
          }
        },
        "required": ["content"]
      }
    },
    {
      "if": {
        "properties": {
          "type": {
            "const": "link"
          }
        }
      },
      "then": {
        "properties": {
          "destination": {
            "type": "string",
            "description": "The destination of the link. Note: Use \":run\" for the run directory."
          },
          "ignore_confirmation": {
            "type": "boolean",
            "description": "Whether to ignore the confirmation screen."
          }
        },
        "required": ["destination"]
      }
    },
    {
      "if": {
        "properties": {
          "type": {
            "const": "await"
          }
        }
      },
      "then": {
        "properties": {
          "actions": {
            "type": ["object", "array"],
            "anyOf": [
              {
                "$ref": "./action.json",
                "description": "A single action."
              },
              {
                "type": "array",
                "items": {
                  "$ref": "./action.json"
                },
                "description": "An array of action entries."
              }
            ],
            "description": "The action(s) to delay."
          },
          "delay": {
            "type": "integer",
            "description": "The amount of tick to delay the actions for."
          }
        },
        "required": ["actions"]
      }
    },
    {
      "if": {
        "properties": {
          "type": {
            "const": "random"
          }
        }
      },
      "then": {
        "properties": {
          "actions": {
            "type": ["object", "array"],
            "anyOf": [
              {
                "$ref": "./action.json",
                "description": "A single action"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "./action.json"
                },
                "description": "An array of action entries."
              }
            ],
            "description": "The action(s) to be randomly executed. If only one is present, it has a 50% chance of being performed."
          }
        },
        "required": ["actions"]
      }
    }
  ]
}